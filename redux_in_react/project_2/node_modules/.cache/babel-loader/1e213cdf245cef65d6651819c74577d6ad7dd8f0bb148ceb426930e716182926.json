{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-https-b5b53-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({}));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending..',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-https-b5b53-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'Success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n\n    // const sendCartData = async () => {\n\n    // }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","items","totalQuantity"],"sources":["/media/joy/Volumn_D/github/Redux/redux_in_react/project_2/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch(\n                'https://react-https-b5b53-default-rtdb.firebaseio.com/cart.json'\n            );\n            if(!response.ok){\n                throw new Error('Could not fetch cart data!');\n            }\n            const data = await response.json();\n            return data;\n        };\n        try {\n           const cartData = await fetchData();\n           dispatch(cartActions.replaceCart({\n            \n           }))\n        } catch (error){\n            dispatch(\n                uiActions.showNotification({\n                    status: 'error',\n                    title: 'Error!',\n                    message: 'Fetching cart data failed!',\n                })\n            );\n        }\n    };\n};\n\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(\n            uiActions.showNotification({\n                status: 'pending',\n                title: 'Sending..',\n                message: 'Sending cart data!',\n            })\n        );\n\n        const sendRequest = async () => {\n\n            const response = await fetch(\n                'https://react-https-b5b53-default-rtdb.firebaseio.com/cart.json',\n                {\n                    method: 'PUT',\n                    body: JSON.stringify({\n                        items:cart.items,\n                        totalQuantity: cart.totalQuantity,\n                    }),\n                });\n            if (!response.ok) {\n                throw new Error('Sending cart data failed.');\n            }\n        };\n        try {\n\n            await sendRequest();\n\n            dispatch(\n                uiActions.showNotification({\n                    status: 'Success',\n                    title: 'Success!',\n                    message: 'Sent cart data successfully!',\n                }))\n        } catch (error) {\n            dispatch(\n                uiActions.showNotification({\n                    status: 'error',\n                    title: 'Error!',\n                    message: 'Sending cart data failed!',\n                })\n            );\n        }\n\n        // const sendCartData = async () => {\n\n        // }\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAG,MAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,YAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,iEAAiE,CACpE;MACD,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC,OAAOD,IAAI;IACf,CAAC;IACD,IAAI;MACD,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAE;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC,CAEjC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAC;MACXV,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CACL;IACL;EACJ,CAAC;AACL,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOhB,QAAQ,IAAK;IACvBA,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;MACvBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,WAAW;MAClBC,OAAO,EAAE;IACb,CAAC,CAAC,CACL;IAED,MAAMG,WAAW,GAAG,YAAY;MAE5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CACxB,iEAAiE,EACjE;QACIe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAACN,IAAI,CAACM,KAAK;UAChBC,aAAa,EAAEP,IAAI,CAACO;QACxB,CAAC;MACL,CAAC,CAAC;MACN,IAAI,CAACrB,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC;IACD,IAAI;MAEA,MAAMY,WAAW,EAAE;MAEnBjB,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;QACvBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZV,QAAQ,CACJH,SAAS,CAACc,gBAAgB,CAAC;QACvBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CACL;IACL;;IAEA;;IAEA;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}